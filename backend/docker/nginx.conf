user www-data;
worker_processes auto;
pid /run/nginx.pid;
daemon off;

events {
	worker_connections 768;
}

http {
	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;
	server_tokens off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	gzip on;

	server {
  	listen 8080 default_server;
  	listen [::]:8080 default_server;

  	root /var/www/html/public/;
    index index.php;

  	server_name _;

  	location / {
      # try to serve file directly, fallback to index.php
      try_files $uri /index.php$is_args$args;
    }

  	location ~ ^/index\.php(/|$) {
      fastcgi_pass unix:/run/php/php8.1-fpm.sock;
      fastcgi_split_path_info ^(.+\.php)(/.*)$;
      include fastcgi_params;

      # optionally set the value of the environment variables used in the application
      # fastcgi_param APP_ENV prod;
      # fastcgi_param APP_SECRET <app-secret-id>;
      # fastcgi_param DATABASE_URL "mysql://db_user:db_pass@host:3306/db_name";

      # When you are using symlinks to link the document root to the
      # current version of your application, you should pass the real
      # application path instead of the path to the symlink to PHP
      # FPM.
      # Otherwise, PHP's OPcache may not properly detect changes to
      # your PHP files (see https://github.com/zendtech/ZendOptimizerPlus/issues/126
      # for more information).
      # Caveat: When PHP-FPM is hosted on a different machine from nginx
      #         $realpath_root may not resolve as you expect! In this case try using
      #         $document_root instead.
      fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
      fastcgi_param DOCUMENT_ROOT $realpath_root;
      # Prevents URIs that include the front controller. This will 404:
      # http://domain.tld/index.php/some-path
      # Remove the internal directive to allow URIs like this
      internal;
    }

    # return 404 for all other php files not matching the front controller
    # this prevents access to other php files you don't want to be accessible.
    location ~ \.php$ {
      return 404;
    }
  }
}
